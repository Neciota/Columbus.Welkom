// <auto-generated />
using System;
using System.Collections.Generic;
using Columbus.Welkom.Application.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Columbus.Welkom.Application.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250726221919_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.LeagueEntity", b =>
                {
                    b.Property<int>("Rank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("rank");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Rank");

                    b.ToTable("league", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.LeagueOwnerEntity", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<int>("LeagueRank")
                        .HasColumnType("INTEGER")
                        .HasColumnName("league_rank");

                    b.HasKey("OwnerId", "LeagueRank");

                    b.HasIndex("LeagueRank");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("league_owner", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.OwnerEntity", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<int>("Club")
                        .HasColumnType("INTEGER")
                        .HasColumnName("club_id");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("OwnerId");

                    b.HasIndex("Club");

                    b.ToTable("owner", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.OwnerTeamEntity", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("team_number");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER")
                        .HasColumnName("position");

                    b.HasKey("OwnerId", "TeamNumber");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.HasIndex("TeamNumber");

                    b.ToTable("owner_team", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonEntity", b =>
                {
                    b.Property<string>("_countryCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("country_code");

                    b.Property<int>("_year")
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.Property<int>("_ringNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ring_number");

                    b.Property<int>("Chip")
                        .HasColumnType("INTEGER")
                        .HasColumnName("chip");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sex");

                    b.ComplexProperty<Dictionary<string, object>>("Id", "Columbus.Welkom.Application.Models.Entities.PigeonEntity.Id#PigeonId", b1 =>
                        {
                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT")
                                .HasColumnName("country_code");

                            b1.Property<int>("RingNumber")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("ring_number");

                            b1.Property<int>("Year")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("year");
                        });

                    b.HasKey("_countryCode", "_year", "_ringNumber");

                    b.HasIndex("OwnerId");

                    b.ToTable("pigeon", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonRaceEntity", b =>
                {
                    b.Property<string>("RaceCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("race_code");

                    b.Property<string>("_countryCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("country_code");

                    b.Property<int>("_year")
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.Property<int>("_ringNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ring_number");

                    b.Property<int>("ArrivalOrder")
                        .HasColumnType("INTEGER")
                        .HasColumnName("arrival_order");

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("arrival_time");

                    b.Property<int>("Mark")
                        .HasColumnType("INTEGER")
                        .HasColumnName("mark");

                    b.ComplexProperty<Dictionary<string, object>>("PigeonId", "Columbus.Welkom.Application.Models.Entities.PigeonRaceEntity.PigeonId#PigeonId", b1 =>
                        {
                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT")
                                .HasColumnName("country_code");

                            b1.Property<int>("RingNumber")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("ring_number");

                            b1.Property<int>("Year")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("year");
                        });

                    b.HasKey("RaceCode", "_countryCode", "_year", "_ringNumber");

                    b.HasIndex("_countryCode", "_year", "_ringNumber");

                    b.ToTable("pigeon_race", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonSaleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("buyer_id");

                    b.Property<int>("SellerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("seller_id");

                    b.Property<string>("_countryCode")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("TEXT")
                        .HasColumnName("country_code");

                    b.Property<int>("_ringNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ring_number");

                    b.Property<int>("_year")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.ComplexProperty<Dictionary<string, object>>("PigeonId", "Columbus.Welkom.Application.Models.Entities.PigeonSaleEntity.PigeonId#PigeonId", b1 =>
                        {
                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT")
                                .HasColumnName("country_code");

                            b1.Property<int>("RingNumber")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("ring_number");

                            b1.Property<int>("Year")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("year");
                        });

                    b.HasKey("Id");

                    b.HasIndex("BuyerId")
                        .IsUnique();

                    b.HasIndex("SellerId")
                        .IsUnique();

                    b.HasIndex("_countryCode", "_year", "_ringNumber")
                        .IsUnique();

                    b.ToTable("pigeon_sale", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonSwapEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoupledPlayerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("coupled_player_id");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("player_id");

                    b.Property<string>("_countryCode")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("TEXT")
                        .HasColumnName("country_code");

                    b.Property<int>("_ringNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ring_number");

                    b.Property<int>("_year")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.ComplexProperty<Dictionary<string, object>>("PigeonId", "Columbus.Welkom.Application.Models.Entities.PigeonSwapEntity.PigeonId#PigeonId", b1 =>
                        {
                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT")
                                .HasColumnName("country_code");

                            b1.Property<int>("RingNumber")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("ring_number");

                            b1.Property<int>("Year")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("year");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CoupledPlayerId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("_countryCode", "_year", "_ringNumber");

                    b.ToTable("pigeon_swap", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.RaceEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("start_time");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasColumnName("type");

                    b.HasKey("Code");

                    b.HasIndex("Number");

                    b.HasIndex("Type");

                    b.ToTable("race", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.SelectedYearPigeonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<string>("_countryCode")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("TEXT")
                        .HasColumnName("country_code");

                    b.Property<int>("_ringNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ring_number");

                    b.Property<int>("_year")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.ComplexProperty<Dictionary<string, object>>("PigeonId", "Columbus.Welkom.Application.Models.Entities.SelectedYearPigeonEntity.PigeonId#PigeonId", b1 =>
                        {
                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT")
                                .HasColumnName("country_code");

                            b1.Property<int>("RingNumber")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("ring_number");

                            b1.Property<int>("Year")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("year");
                        });

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.HasIndex("_countryCode", "_year", "_ringNumber")
                        .IsUnique();

                    b.ToTable("selected_year_pigeon", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.SelectedYoungPigeonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("owner_id");

                    b.Property<string>("_countryCode")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("TEXT")
                        .HasColumnName("country_code");

                    b.Property<int>("_ringNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ring_number");

                    b.Property<int>("_year")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.ComplexProperty<Dictionary<string, object>>("PigeonId", "Columbus.Welkom.Application.Models.Entities.SelectedYoungPigeonEntity.PigeonId#PigeonId", b1 =>
                        {
                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT")
                                .HasColumnName("country_code");

                            b1.Property<int>("RingNumber")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("ring_number");

                            b1.Property<int>("Year")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("INTEGER")
                                .HasColumnName("year");
                        });

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.HasIndex("_countryCode", "_year", "_ringNumber")
                        .IsUnique();

                    b.ToTable("selected_young_pigeon", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.TeamEntity", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("number");

                    b.HasKey("Number");

                    b.ToTable("team", (string)null);
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.LeagueOwnerEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.LeagueEntity", "League")
                        .WithMany("LeagueOwners")
                        .HasForeignKey("LeagueRank")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Owner")
                        .WithOne("LeagueOwner")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.LeagueOwnerEntity", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.OwnerTeamEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Owner")
                        .WithOne("OwnerTeam")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.OwnerTeamEntity", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.TeamEntity", "Team")
                        .WithMany()
                        .HasForeignKey("TeamNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Owner")
                        .WithMany("Pigeons")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonRaceEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.RaceEntity", "Race")
                        .WithMany("PigeonRaces")
                        .HasForeignKey("RaceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.PigeonEntity", "Pigeon")
                        .WithMany("PigeonRaces")
                        .HasForeignKey("_countryCode", "_year", "_ringNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pigeon");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonSaleEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Buyer")
                        .WithOne("PigeonBuy")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.PigeonSaleEntity", "BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Seller")
                        .WithOne("PigeonSale")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.PigeonSaleEntity", "SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.PigeonEntity", "Pigeon")
                        .WithOne("PigeonSale")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.PigeonSaleEntity", "_countryCode", "_year", "_ringNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Pigeon");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonSwapEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "CoupledPlayer")
                        .WithMany("CoupledSwappedPigeons")
                        .HasForeignKey("CoupledPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Owner")
                        .WithMany("OwnedSwappedPigeons")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Player")
                        .WithMany("PlayedSwappedPigeons")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.PigeonEntity", "Pigeon")
                        .WithMany("PigeonSwaps")
                        .HasForeignKey("_countryCode", "_year", "_ringNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoupledPlayer");

                    b.Navigation("Owner");

                    b.Navigation("Pigeon");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.SelectedYearPigeonEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Owner")
                        .WithOne("SelectedYearPigeon")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.SelectedYearPigeonEntity", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.PigeonEntity", "Pigeon")
                        .WithOne("SelectedYearPigeonEntity")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.SelectedYearPigeonEntity", "_countryCode", "_year", "_ringNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pigeon");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.SelectedYoungPigeonEntity", b =>
                {
                    b.HasOne("Columbus.Welkom.Application.Models.Entities.OwnerEntity", "Owner")
                        .WithOne("SelectedYoungPigeon")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.SelectedYoungPigeonEntity", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Columbus.Welkom.Application.Models.Entities.PigeonEntity", "Pigeon")
                        .WithOne("SelectedYoungPigeonEntity")
                        .HasForeignKey("Columbus.Welkom.Application.Models.Entities.SelectedYoungPigeonEntity", "_countryCode", "_year", "_ringNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pigeon");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.LeagueEntity", b =>
                {
                    b.Navigation("LeagueOwners");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.OwnerEntity", b =>
                {
                    b.Navigation("CoupledSwappedPigeons");

                    b.Navigation("LeagueOwner");

                    b.Navigation("OwnedSwappedPigeons");

                    b.Navigation("OwnerTeam");

                    b.Navigation("PigeonBuy");

                    b.Navigation("PigeonSale");

                    b.Navigation("Pigeons");

                    b.Navigation("PlayedSwappedPigeons");

                    b.Navigation("SelectedYearPigeon");

                    b.Navigation("SelectedYoungPigeon");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.PigeonEntity", b =>
                {
                    b.Navigation("PigeonRaces");

                    b.Navigation("PigeonSale");

                    b.Navigation("PigeonSwaps");

                    b.Navigation("SelectedYearPigeonEntity");

                    b.Navigation("SelectedYoungPigeonEntity");
                });

            modelBuilder.Entity("Columbus.Welkom.Application.Models.Entities.RaceEntity", b =>
                {
                    b.Navigation("PigeonRaces");
                });
#pragma warning restore 612, 618
        }
    }
}
