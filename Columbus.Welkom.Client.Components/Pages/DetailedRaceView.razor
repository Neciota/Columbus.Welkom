@using Columbus.Welkom.Application.Services.Interfaces
@inject IRaceService RaceService;

<RadzenStack AlignItems="AlignItems.Start" Orientation="Orientation.Vertical" Visible="_race is not null">
    <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" Style="width: 100%;">
        <RadzenText TextStyle="TextStyle.DisplayH6" TextAlign="TextAlign.Center">
            @_race?.ToString() gelost op @_race?.StartTime met @_race?.OwnerRaces.Count deelnemers en @_race?.PigeonRaces.Count duiven in concours.
        </RadzenText>

        <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="arrow_back" Click="() => _race = null" Size="ButtonSize.Small" />
    </RadzenStack>

    <RadzenDataGrid Data="_race?.PigeonRaces" EmptyText="Geen duiven in vlucht.">
        <Columns>
            <RadzenDataGridColumn TItem="PigeonRace" Property="Position" Title="Prs" Width="50px" />
            <RadzenDataGridColumn TItem="PigeonRace" Property="Next" Title="Vlg" Width="50px" />
            <RadzenDataGridColumn TItem="PigeonRace" Title="Naam">
                <Template>
                    @GetOwnerRace(context).Owner.Name
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PigeonRace" Title="Mee" Width="50px">
                <Template>
                    @GetOwnerRace(context).Count
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PigeonRace" Property="Mark" Title="Get" Width="50px" />
            <RadzenDataGridColumn TItem="PigeonRace" Title="Afstand">
                <Template>
                    @Math.Round(GetOwnerRace(context).Distance / 1000, 3)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PigeonRace" Property="Pigeon" Title="Ringnummer">
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PigeonRace" Title="Zuiver">
                <Template>
                    @context.ArrivalTime?.ToString("HH:mm:ss")
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PigeonRace" Title="Snelheid">
                <Template>
                    @context.GetSpeed(GetOwnerRace(context).Distance, _race.StartTime, TimeSpan.Zero)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PigeonRace" Property="Points" Title="Punten" Width="100px" />
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    [Parameter, EditorRequired]
    public string? Code { get; set; }
    [Parameter, EditorRequired]
    public int? Year { get; set; }

    private Race? _race;
    private Dictionary<PigeonRace, OwnerRace> _ownerRaces = null!;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (Code is null || Year is null)
            return;

        _race = await RaceService.GetRaceByCodeAsync(Code);

        _ownerRaces = _race.PigeonRaces.ToDictionary(pr => pr, pr => _race.OwnerRaces.First(or => or.Owner.Pigeons.Contains(pr.Pigeon)));
    }

    private OwnerRace GetOwnerRace(PigeonRace pigeonRace) => _ownerRaces[pigeonRace];
}
