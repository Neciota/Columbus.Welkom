@page "/"
@using Columbus.UDP.Interfaces;
@inject NotificationService NotificationService
@inject IOwnerService OwnerService

<RadzenStack AlignItems="AlignItems.Start" Orientation="Orientation.Vertical">
    <RadzenText TextStyle="TextStyle.DisplayH6">
        Leden
    </RadzenText>

    <RadzenButton Text="Ledenbestand"
                  ButtonStyle="ButtonStyle.Primary"
                  ButtonType="ButtonType.Button"
                  Icon="upload_file"
                  Click="ReadFile" />

    <RadzenDataGrid Data="_owners">
        <Columns>
            <RadzenDataGridColumn TItem="Owner" Title="Lidnummer" Property="ID" />
            <RadzenDataGridColumn TItem="Owner" Title="Naam" Property="Name" />
            <RadzenDataGridColumn TItem="Owner" Title="Duiven">
                <Template>
                    @context.Pigeons.Count()
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    [CascadingParameter(Name = "Club")]
    public int Club { get; set; }
    [CascadingParameter(Name = "Year")]
    public int Year { get; set; }

    private IEnumerable<Owner> _owners = new List<Owner>();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        _owners = OwnerService.GetStorage(Club, Year) ?? new List<Owner>();
    }

    private async Task ReadFile()
    {
        try
        {
            _owners = await OwnerService.ReadOwnersFromFile();
        }
        catch (JSException)
        {
            NotificationService.Notify(NotificationSeverity.Error, "Fout", "Bestand kon niet worden geladen.");
            return;
        }

        OwnerService.SetStorage(_owners, Club, Year);
    }
}
